(define (player-who-moves a b axis dir) (if (typ? b T_TERRAIN) MOVE_ME MOVE_BOTH))
(define player-draw (base-draw 0.3 1.0 0.3))
;(define (player-tick me) (accel me (map (lambda (x) (* 10 x)) (get-axis me))))
(define (bound x b) (if (> x b) b (if (< x (- b)) (- b) x)))

(define (player-pushed me him axis dir dx dv)
	(let ((state (get-state me)))
	(if (not axis)
		(set-slider state 0 0)
		(if (< dir 0)
			(begin
				(set-slider state 0 (bound (car (get-vel him me)) 128))
				(set-slider state 1 1)
			)
		)
	)
	)
	R_PASS
)
(define (player-tick me)
	(let ((state (get-state me)))
	(let ((axis (get-axis me)) (grounded (> (get-slider state 1) 0)) (slider (get-slider state 0)))
		(let ((dx (bound (- (* 4 (car axis)) slider) 10)))
			(set-slider state 0 (+ slider dx))
			(accel me (quotient dx (if grounded 1 2)) 0)
		)
		(if (and grounded (< (cadr axis) -15))
			(accel me 0 -192)
		)
		(set-slider state 1 0)
		(if (get-button me) (kill me) '())
	)
	)
)
;(define (player-tick me) (let ((axis (get-axis me))) (accel me (* 1 (car axis)) (* 1 (cadr axis)))))
(define (mk-player pos)
	(set-tick (set-draw (set-who-moves (set-pushed (player-create-tmp pos 2) 'player-pushed) 'player-who-moves) 'player-draw) 'player-tick)
)
